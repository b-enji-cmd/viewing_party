---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=movies_secret&language=en-US&query=Phoenix
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 30 Mar 2021 01:09:03 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 81643bff8844b667cc968721a35ef95a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - bYD5JNy4gEAJyRqhiT2Tc8TSnh2HeLOvoIxa3lJN5twBIwVgZ04KsQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 30 Mar 2021 01:09:03 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/320288
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 401
      message: Unauthorized
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 30 Mar 2021 01:09:03 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=300
      X-Cache:
      - Error from cloudfront
      Via:
      - 1.1 02b9f097e6bccd6a8d89ebf056435cb5.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - fkDKyNUWgla6opGqG4ZTC37UaDLNai577yyZb9yuHVmaOmCEqKayfQ==
    body:
      encoding: UTF-8
      string: '{"status_code":7,"status_message":"Invalid API key: You must be granted
        a valid key.","success":false}

'
  recorded_at: Tue, 30 Mar 2021 01:09:03 GMT
recorded_with: VCR 6.0.0
